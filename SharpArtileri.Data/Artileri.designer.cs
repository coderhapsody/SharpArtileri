#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpArtileri.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ArtileriGYM")]
	public partial class ArtileriDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertItemPriceList(ItemPriceList instance);
    partial void UpdateItemPriceList(ItemPriceList instance);
    partial void DeleteItemPriceList(ItemPriceList instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertPurchaseOrderDetail(PurchaseOrderDetail instance);
    partial void UpdatePurchaseOrderDetail(PurchaseOrderDetail instance);
    partial void DeletePurchaseOrderDetail(PurchaseOrderDetail instance);
    partial void InsertReceivingDetail(ReceivingDetail instance);
    partial void UpdateReceivingDetail(ReceivingDetail instance);
    partial void DeleteReceivingDetail(ReceivingDetail instance);
    partial void InsertReceivingHeader(ReceivingHeader instance);
    partial void UpdateReceivingHeader(ReceivingHeader instance);
    partial void DeleteReceivingHeader(ReceivingHeader instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleMenu(RoleMenu instance);
    partial void UpdateRoleMenu(RoleMenu instance);
    partial void DeleteRoleMenu(RoleMenu instance);
    partial void InsertRunningNumber(RunningNumber instance);
    partial void UpdateRunningNumber(RunningNumber instance);
    partial void DeleteRunningNumber(RunningNumber instance);
    partial void InsertTerm(Term instance);
    partial void UpdateTerm(Term instance);
    partial void DeleteTerm(Term instance);
    partial void InsertPurchaseOrderHeader(PurchaseOrderHeader instance);
    partial void UpdatePurchaseOrderHeader(PurchaseOrderHeader instance);
    partial void DeletePurchaseOrderHeader(PurchaseOrderHeader instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertAutoNumber(AutoNumber instance);
    partial void UpdateAutoNumber(AutoNumber instance);
    partial void DeleteAutoNumber(AutoNumber instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    #endregion
		
		public ArtileriDataContext() : 
				base(global::SharpArtileri.Data.Properties.Settings.Default.ArtileriGYMConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ArtileriDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArtileriDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArtileriDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArtileriDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<ItemPriceList> ItemPriceLists
		{
			get
			{
				return this.GetTable<ItemPriceList>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this.GetTable<PurchaseOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<ReceivingDetail> ReceivingDetails
		{
			get
			{
				return this.GetTable<ReceivingDetail>();
			}
		}
		
		public System.Data.Linq.Table<ReceivingHeader> ReceivingHeaders
		{
			get
			{
				return this.GetTable<ReceivingHeader>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleMenu> RoleMenus
		{
			get
			{
				return this.GetTable<RoleMenu>();
			}
		}
		
		public System.Data.Linq.Table<RunningNumber> RunningNumbers
		{
			get
			{
				return this.GetTable<RunningNumber>();
			}
		}
		
		public System.Data.Linq.Table<Term> Terms
		{
			get
			{
				return this.GetTable<Term>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this.GetTable<PurchaseOrderHeader>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<AutoNumber> AutoNumbers
		{
			get
			{
				return this.GetTable<AutoNumber>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Email;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public Branch()
		{
			this._PurchaseOrderHeaders = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeaders), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_PurchaseOrderHeader", Storage="_PurchaseOrderHeaders", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this._PurchaseOrderHeaders;
			}
			set
			{
				this._PurchaseOrderHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Name;
		
		private string _Initial;
		
		private string _Gender;
		
		private string _CellPhone1;
		
		private string _CellPhone2;
		
		private string _Email;
		
		private int _RoleID;
		
		private bool _IsAllowLogin;
		
		private bool _IsActive;
		
		private string _CurrentCompanyCode;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeaders;
		
		private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeaders1;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInitialChanging(string value);
    partial void OnInitialChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCellPhone1Changing(string value);
    partial void OnCellPhone1Changed();
    partial void OnCellPhone2Changing(string value);
    partial void OnCellPhone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnIsAllowLoginChanging(bool value);
    partial void OnIsAllowLoginChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCurrentCompanyCodeChanging(string value);
    partial void OnCurrentCompanyCodeChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public Employee()
		{
			this._PurchaseOrderHeaders = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeaders), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeaders));
			this._PurchaseOrderHeaders1 = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeaders1), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeaders1));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Initial", DbType="VarChar(5)")]
		public string Initial
		{
			get
			{
				return this._Initial;
			}
			set
			{
				if ((this._Initial != value))
				{
					this.OnInitialChanging(value);
					this.SendPropertyChanging();
					this._Initial = value;
					this.SendPropertyChanged("Initial");
					this.OnInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone1", DbType="VarChar(20)")]
		public string CellPhone1
		{
			get
			{
				return this._CellPhone1;
			}
			set
			{
				if ((this._CellPhone1 != value))
				{
					this.OnCellPhone1Changing(value);
					this.SendPropertyChanging();
					this._CellPhone1 = value;
					this.SendPropertyChanged("CellPhone1");
					this.OnCellPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone2", DbType="VarChar(20)")]
		public string CellPhone2
		{
			get
			{
				return this._CellPhone2;
			}
			set
			{
				if ((this._CellPhone2 != value))
				{
					this.OnCellPhone2Changing(value);
					this.SendPropertyChanging();
					this._CellPhone2 = value;
					this.SendPropertyChanged("CellPhone2");
					this.OnCellPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowLogin", DbType="Bit NOT NULL")]
		public bool IsAllowLogin
		{
			get
			{
				return this._IsAllowLogin;
			}
			set
			{
				if ((this._IsAllowLogin != value))
				{
					this.OnIsAllowLoginChanging(value);
					this.SendPropertyChanging();
					this._IsAllowLogin = value;
					this.SendPropertyChanged("IsAllowLogin");
					this.OnIsAllowLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCompanyCode", DbType="VarChar(20)")]
		public string CurrentCompanyCode
		{
			get
			{
				return this._CurrentCompanyCode;
			}
			set
			{
				if ((this._CurrentCompanyCode != value))
				{
					this.OnCurrentCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrentCompanyCode = value;
					this.SendPropertyChanged("CurrentCompanyCode");
					this.OnCurrentCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PurchaseOrderHeader", Storage="_PurchaseOrderHeaders", ThisKey="ID", OtherKey="ApprovedByEmployeeID")]
		public EntitySet<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this._PurchaseOrderHeaders;
			}
			set
			{
				this._PurchaseOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PurchaseOrderHeader1", Storage="_PurchaseOrderHeaders1", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<PurchaseOrderHeader> PurchaseOrderHeaders1
		{
			get
			{
				return this._PurchaseOrderHeaders1;
			}
			set
			{
				this._PurchaseOrderHeaders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Employee", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PurchaseOrderHeaders1(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_PurchaseOrderHeaders1(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemPriceList")]
	public partial class ItemPriceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SupplierID;
		
		private int _ItemID;
		
		private string _UnitName;
		
		private System.DateTime _EffectiveDate;
		
		private decimal _Price;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnEffectiveDateChanging(System.DateTime value);
    partial void OnEffectiveDateChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public ItemPriceList()
		{
			this._Supplier = default(EntityRef<Supplier>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="VarChar(10)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ItemPriceList", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ItemPriceLists.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ItemPriceLists.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemPriceList", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemPriceLists.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemPriceLists.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _NavigationTo;
		
		private int _Seq;
		
		private System.Nullable<int> _ParentMenuID;
		
		private System.Nullable<byte> _Type;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntityRef<Menu> _Menu1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNavigationToChanging(string value);
    partial void OnNavigationToChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnParentMenuIDChanging(System.Nullable<int> value);
    partial void OnParentMenuIDChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Menu()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._Menu1 = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigationTo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NavigationTo
		{
			get
			{
				return this._NavigationTo;
			}
			set
			{
				if ((this._NavigationTo != value))
				{
					this.OnNavigationToChanging(value);
					this.SendPropertyChanging();
					this._NavigationTo = value;
					this.SendPropertyChanged("NavigationTo");
					this.OnNavigationToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int NOT NULL")]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuID", DbType="Int")]
		public System.Nullable<int> ParentMenuID
		{
			get
			{
				return this._ParentMenuID;
			}
			set
			{
				if ((this._ParentMenuID != value))
				{
					if (this._Menu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMenuIDChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuID = value;
					this.SendPropertyChanged("ParentMenuID");
					this.OnParentMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menus", ThisKey="ID", OtherKey="ParentMenuID")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_RoleMenus", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menu1", ThisKey="ParentMenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu1
		{
			get
			{
				return this._Menu1.Entity;
			}
			set
			{
				Menu previousValue = this._Menu1.Entity;
				if (((previousValue != value) 
							|| (this._Menu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu1.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Menu1.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._ParentMenuID = value.ID;
					}
					else
					{
						this._ParentMenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseOrderDetail")]
	public partial class PurchaseOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PurchaseOrderID;
		
		private int _ItemID;
		
		private string _UnitName;
		
		private decimal _UnitRatio;
		
		private decimal _Quantity;
		
		private decimal _UnitPrice;
		
		private bool _IsTaxed;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountValue;
		
		private string _Notes;
		
		private EntityRef<PurchaseOrderHeader> _PurchaseOrderHeader;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnUnitRatioChanging(decimal value);
    partial void OnUnitRatioChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnIsTaxedChanging(bool value);
    partial void OnIsTaxedChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PurchaseOrderDetail()
		{
			this._PurchaseOrderHeader = default(EntityRef<PurchaseOrderHeader>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderID", DbType="Int NOT NULL")]
		public int PurchaseOrderID
		{
			get
			{
				return this._PurchaseOrderID;
			}
			set
			{
				if ((this._PurchaseOrderID != value))
				{
					if (this._PurchaseOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderID = value;
					this.SendPropertyChanged("PurchaseOrderID");
					this.OnPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitRatio", DbType="Decimal(5,2) NOT NULL")]
		public decimal UnitRatio
		{
			get
			{
				return this._UnitRatio;
			}
			set
			{
				if ((this._UnitRatio != value))
				{
					this.OnUnitRatioChanging(value);
					this.SendPropertyChanging();
					this._UnitRatio = value;
					this.SendPropertyChanged("UnitRatio");
					this.OnUnitRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxed", DbType="Bit NOT NULL")]
		public bool IsTaxed
		{
			get
			{
				return this._IsTaxed;
			}
			set
			{
				if ((this._IsTaxed != value))
				{
					this.OnIsTaxedChanging(value);
					this.SendPropertyChanging();
					this._IsTaxed = value;
					this.SendPropertyChanged("IsTaxed");
					this.OnIsTaxedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(5,2) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Money NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderHeader_PurchaseOrderDetail", Storage="_PurchaseOrderHeader", ThisKey="PurchaseOrderID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseOrderHeader PurchaseOrderHeader
		{
			get
			{
				return this._PurchaseOrderHeader.Entity;
			}
			set
			{
				PurchaseOrderHeader previousValue = this._PurchaseOrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrderHeader.Entity = null;
						previousValue.PurchaseOrderDetails.Remove(this);
					}
					this._PurchaseOrderHeader.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderDetails.Add(this);
						this._PurchaseOrderID = value.ID;
					}
					else
					{
						this._PurchaseOrderID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrderHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_PurchaseOrderDetail", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.PurchaseOrderDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderDetails.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceivingDetail")]
	public partial class ReceivingDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ReceivingID;
		
		private int _ItemID;
		
		private string _UnitName;
		
		private decimal _QtyReceived;
		
		private string _Notes;
		
		private EntityRef<ReceivingHeader> _ReceivingHeader;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReceivingIDChanging(int value);
    partial void OnReceivingIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnQtyReceivedChanging(decimal value);
    partial void OnQtyReceivedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ReceivingDetail()
		{
			this._ReceivingHeader = default(EntityRef<ReceivingHeader>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingID", DbType="Int NOT NULL")]
		public int ReceivingID
		{
			get
			{
				return this._ReceivingID;
			}
			set
			{
				if ((this._ReceivingID != value))
				{
					if (this._ReceivingHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceivingIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivingID = value;
					this.SendPropertyChanged("ReceivingID");
					this.OnReceivingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyReceived", DbType="Decimal(10,2) NOT NULL")]
		public decimal QtyReceived
		{
			get
			{
				return this._QtyReceived;
			}
			set
			{
				if ((this._QtyReceived != value))
				{
					this.OnQtyReceivedChanging(value);
					this.SendPropertyChanging();
					this._QtyReceived = value;
					this.SendPropertyChanged("QtyReceived");
					this.OnQtyReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceivingHeader_ReceivingDetail", Storage="_ReceivingHeader", ThisKey="ReceivingID", OtherKey="ID", IsForeignKey=true)]
		public ReceivingHeader ReceivingHeader
		{
			get
			{
				return this._ReceivingHeader.Entity;
			}
			set
			{
				ReceivingHeader previousValue = this._ReceivingHeader.Entity;
				if (((previousValue != value) 
							|| (this._ReceivingHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceivingHeader.Entity = null;
						previousValue.ReceivingDetails.Remove(this);
					}
					this._ReceivingHeader.Entity = value;
					if ((value != null))
					{
						value.ReceivingDetails.Add(this);
						this._ReceivingID = value.ID;
					}
					else
					{
						this._ReceivingID = default(int);
					}
					this.SendPropertyChanged("ReceivingHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ReceivingDetail", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ReceivingDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ReceivingDetails.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceivingHeader")]
	public partial class ReceivingHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DocumentNo;
		
		private int _PurchaseOrderID;
		
		private System.DateTime _Date;
		
		private string _GoodIssueNo;
		
		private string _FreightInfo;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private string _VoidReason;
		
		private string _Status;
		
		private string _Notes;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<ReceivingDetail> _ReceivingDetails;
		
		private EntityRef<PurchaseOrderHeader> _PurchaseOrderHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnGoodIssueNoChanging(string value);
    partial void OnGoodIssueNoChanged();
    partial void OnFreightInfoChanging(string value);
    partial void OnFreightInfoChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnVoidReasonChanging(string value);
    partial void OnVoidReasonChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public ReceivingHeader()
		{
			this._ReceivingDetails = new EntitySet<ReceivingDetail>(new Action<ReceivingDetail>(this.attach_ReceivingDetails), new Action<ReceivingDetail>(this.detach_ReceivingDetails));
			this._PurchaseOrderHeader = default(EntityRef<PurchaseOrderHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderID", DbType="Int NOT NULL")]
		public int PurchaseOrderID
		{
			get
			{
				return this._PurchaseOrderID;
			}
			set
			{
				if ((this._PurchaseOrderID != value))
				{
					if (this._PurchaseOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderID = value;
					this.SendPropertyChanged("PurchaseOrderID");
					this.OnPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodIssueNo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string GoodIssueNo
		{
			get
			{
				return this._GoodIssueNo;
			}
			set
			{
				if ((this._GoodIssueNo != value))
				{
					this.OnGoodIssueNoChanging(value);
					this.SendPropertyChanging();
					this._GoodIssueNo = value;
					this.SendPropertyChanged("GoodIssueNo");
					this.OnGoodIssueNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightInfo", DbType="VarChar(2000)")]
		public string FreightInfo
		{
			get
			{
				return this._FreightInfo;
			}
			set
			{
				if ((this._FreightInfo != value))
				{
					this.OnFreightInfoChanging(value);
					this.SendPropertyChanging();
					this._FreightInfo = value;
					this.SendPropertyChanged("FreightInfo");
					this.OnFreightInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidReason", DbType="VarChar(2000)")]
		public string VoidReason
		{
			get
			{
				return this._VoidReason;
			}
			set
			{
				if ((this._VoidReason != value))
				{
					this.OnVoidReasonChanging(value);
					this.SendPropertyChanging();
					this._VoidReason = value;
					this.SendPropertyChanged("VoidReason");
					this.OnVoidReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceivingHeader_ReceivingDetail", Storage="_ReceivingDetails", ThisKey="ID", OtherKey="ReceivingID")]
		public EntitySet<ReceivingDetail> ReceivingDetails
		{
			get
			{
				return this._ReceivingDetails;
			}
			set
			{
				this._ReceivingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderHeader_ReceivingHeader", Storage="_PurchaseOrderHeader", ThisKey="PurchaseOrderID", OtherKey="ID", IsForeignKey=true)]
		public PurchaseOrderHeader PurchaseOrderHeader
		{
			get
			{
				return this._PurchaseOrderHeader.Entity;
			}
			set
			{
				PurchaseOrderHeader previousValue = this._PurchaseOrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrderHeader.Entity = null;
						previousValue.ReceivingHeaders.Remove(this);
					}
					this._PurchaseOrderHeader.Entity = value;
					if ((value != null))
					{
						value.ReceivingHeaders.Add(this);
						this._PurchaseOrderID = value.ID;
					}
					else
					{
						this._PurchaseOrderID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrderHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceivingDetails(ReceivingDetail entity)
		{
			this.SendPropertyChanging();
			entity.ReceivingHeader = this;
		}
		
		private void detach_ReceivingDetails(ReceivingDetail entity)
		{
			this.SendPropertyChanging();
			entity.ReceivingHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public Role()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Employee", Storage="_Employees", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMenu", Storage="_RoleMenus", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMenu")]
	public partial class RoleMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _MenuID;
		
		private System.Nullable<bool> _AllowUpdate;
		
		private System.Nullable<bool> _AllowAddNew;
		
		private System.Nullable<bool> _AllowDelete;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnAllowUpdateChanging(System.Nullable<bool> value);
    partial void OnAllowUpdateChanged();
    partial void OnAllowAddNewChanging(System.Nullable<bool> value);
    partial void OnAllowAddNewChanged();
    partial void OnAllowDeleteChanging(System.Nullable<bool> value);
    partial void OnAllowDeleteChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public RoleMenu()
		{
			this._Menu = default(EntityRef<Menu>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowUpdate", DbType="Bit")]
		public System.Nullable<bool> AllowUpdate
		{
			get
			{
				return this._AllowUpdate;
			}
			set
			{
				if ((this._AllowUpdate != value))
				{
					this.OnAllowUpdateChanging(value);
					this.SendPropertyChanging();
					this._AllowUpdate = value;
					this.SendPropertyChanged("AllowUpdate");
					this.OnAllowUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAddNew", DbType="Bit")]
		public System.Nullable<bool> AllowAddNew
		{
			get
			{
				return this._AllowAddNew;
			}
			set
			{
				if ((this._AllowAddNew != value))
				{
					this.OnAllowAddNewChanging(value);
					this.SendPropertyChanging();
					this._AllowAddNew = value;
					this.SendPropertyChanged("AllowAddNew");
					this.OnAllowAddNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowDelete", DbType="Bit")]
		public System.Nullable<bool> AllowDelete
		{
			get
			{
				return this._AllowDelete;
			}
			set
			{
				if ((this._AllowDelete != value))
				{
					this.OnAllowDeleteChanging(value);
					this.SendPropertyChanging();
					this._AllowDelete = value;
					this.SendPropertyChanged("AllowDelete");
					this.OnAllowDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_Menu", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMenu", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RunningNumber")]
	public partial class RunningNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FormCode;
		
		private int _Month;
		
		private int _Year;
		
		private string _Prefix;
		
		private int _CurrentNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormCodeChanging(string value);
    partial void OnFormCodeChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnCurrentNoChanging(int value);
    partial void OnCurrentNoChanged();
    #endregion
		
		public RunningNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormCode", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FormCode
		{
			get
			{
				return this._FormCode;
			}
			set
			{
				if ((this._FormCode != value))
				{
					this.OnFormCodeChanging(value);
					this.SendPropertyChanging();
					this._FormCode = value;
					this.SendPropertyChanged("FormCode");
					this.OnFormCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(10)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentNo", DbType="Int NOT NULL")]
		public int CurrentNo
		{
			get
			{
				return this._CurrentNo;
			}
			set
			{
				if ((this._CurrentNo != value))
				{
					this.OnCurrentNoChanging(value);
					this.SendPropertyChanging();
					this._CurrentNo = value;
					this.SendPropertyChanged("CurrentNo");
					this.OnCurrentNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Term")]
	public partial class Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public Term()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseOrderHeader")]
	public partial class PurchaseOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private string _DocumentNo;
		
		private System.DateTime _Date;
		
		private int _SupplierID;
		
		private int _EmployeeID;
		
		private string _Status;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountValue;
		
		private string _Terms;
		
		private System.Nullable<System.DateTime> _ExpectedDate;
		
		private System.Nullable<int> _ApprovedByEmployeeID;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private string _VoidReason;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private string _ApproveReason;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private bool _IsFullReceived;
		
		private string _StatusReceiving;
		
		private EntitySet<PurchaseOrderDetail> _PurchaseOrderDetails;
		
		private EntitySet<ReceivingHeader> _ReceivingHeaders;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnTermsChanging(string value);
    partial void OnTermsChanged();
    partial void OnExpectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedDateChanged();
    partial void OnApprovedByEmployeeIDChanging(System.Nullable<int> value);
    partial void OnApprovedByEmployeeIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnVoidReasonChanging(string value);
    partial void OnVoidReasonChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnApproveReasonChanging(string value);
    partial void OnApproveReasonChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnIsFullReceivedChanging(bool value);
    partial void OnIsFullReceivedChanged();
    partial void OnStatusReceivingChanging(string value);
    partial void OnStatusReceivingChanged();
    #endregion
		
		public PurchaseOrderHeader()
		{
			this._PurchaseOrderDetails = new EntitySet<PurchaseOrderDetail>(new Action<PurchaseOrderDetail>(this.attach_PurchaseOrderDetails), new Action<PurchaseOrderDetail>(this.detach_PurchaseOrderDetails));
			this._ReceivingHeaders = new EntitySet<ReceivingHeader>(new Action<ReceivingHeader>(this.attach_ReceivingHeaders), new Action<ReceivingHeader>(this.detach_ReceivingHeaders));
			this._Employee = default(EntityRef<Employee>);
			this._Branch = default(EntityRef<Branch>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(5,2) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Money NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terms", DbType="VarChar(30)")]
		public string Terms
		{
			get
			{
				return this._Terms;
			}
			set
			{
				if ((this._Terms != value))
				{
					this.OnTermsChanging(value);
					this.SendPropertyChanging();
					this._Terms = value;
					this.SendPropertyChanged("Terms");
					this.OnTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedDate
		{
			get
			{
				return this._ExpectedDate;
			}
			set
			{
				if ((this._ExpectedDate != value))
				{
					this.OnExpectedDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedDate = value;
					this.SendPropertyChanged("ExpectedDate");
					this.OnExpectedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByEmployeeID", DbType="Int")]
		public System.Nullable<int> ApprovedByEmployeeID
		{
			get
			{
				return this._ApprovedByEmployeeID;
			}
			set
			{
				if ((this._ApprovedByEmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByEmployeeID = value;
					this.SendPropertyChanged("ApprovedByEmployeeID");
					this.OnApprovedByEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidReason", DbType="VarChar(2000)")]
		public string VoidReason
		{
			get
			{
				return this._VoidReason;
			}
			set
			{
				if ((this._VoidReason != value))
				{
					this.OnVoidReasonChanging(value);
					this.SendPropertyChanging();
					this._VoidReason = value;
					this.SendPropertyChanged("VoidReason");
					this.OnVoidReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveReason", DbType="VarChar(2000)")]
		public string ApproveReason
		{
			get
			{
				return this._ApproveReason;
			}
			set
			{
				if ((this._ApproveReason != value))
				{
					this.OnApproveReasonChanging(value);
					this.SendPropertyChanging();
					this._ApproveReason = value;
					this.SendPropertyChanged("ApproveReason");
					this.OnApproveReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullReceived", DbType="Bit NOT NULL")]
		public bool IsFullReceived
		{
			get
			{
				return this._IsFullReceived;
			}
			set
			{
				if ((this._IsFullReceived != value))
				{
					this.OnIsFullReceivedChanging(value);
					this.SendPropertyChanging();
					this._IsFullReceived = value;
					this.SendPropertyChanged("IsFullReceived");
					this.OnIsFullReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusReceiving", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StatusReceiving
		{
			get
			{
				return this._StatusReceiving;
			}
			set
			{
				if ((this._StatusReceiving != value))
				{
					this.OnStatusReceivingChanging(value);
					this.SendPropertyChanging();
					this._StatusReceiving = value;
					this.SendPropertyChanged("StatusReceiving");
					this.OnStatusReceivingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderHeader_PurchaseOrderDetail", Storage="_PurchaseOrderDetails", ThisKey="ID", OtherKey="PurchaseOrderID")]
		public EntitySet<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this._PurchaseOrderDetails;
			}
			set
			{
				this._PurchaseOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderHeader_ReceivingHeader", Storage="_ReceivingHeaders", ThisKey="ID", OtherKey="PurchaseOrderID")]
		public EntitySet<ReceivingHeader> ReceivingHeaders
		{
			get
			{
				return this._ReceivingHeaders;
			}
			set
			{
				this._ReceivingHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PurchaseOrderHeader", Storage="_Employee", ThisKey="ApprovedByEmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PurchaseOrderHeaders.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderHeaders.Add(this);
						this._ApprovedByEmployeeID = value.ID;
					}
					else
					{
						this._ApprovedByEmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_PurchaseOrderHeader", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.PurchaseOrderHeaders.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderHeaders.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PurchaseOrderHeader1", Storage="_Employee1", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.PurchaseOrderHeaders1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderHeaders1.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchaseOrderHeader", Storage="_Supplier", ThisKey="SupplierID", OtherKey="ID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.PurchaseOrderHeaders.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderHeaders.Add(this);
						this._SupplierID = value.ID;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderHeader = this;
		}
		
		private void detach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderHeader = null;
		}
		
		private void attach_ReceivingHeaders(ReceivingHeader entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderHeader = this;
		}
		
		private void detach_ReceivingHeaders(ReceivingHeader entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _NPWP;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private bool _Taxable;
		
		private System.Nullable<System.DateTime> _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.Nullable<System.DateTime> _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ItemPriceList> _ItemPriceLists;
		
		private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNPWPChanging(string value);
    partial void OnNPWPChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnTaxableChanging(bool value);
    partial void OnTaxableChanged();
    partial void OnCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Supplier()
		{
			this._ItemPriceLists = new EntitySet<ItemPriceList>(new Action<ItemPriceList>(this.attach_ItemPriceLists), new Action<ItemPriceList>(this.detach_ItemPriceLists));
			this._PurchaseOrderHeaders = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeaders), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(5)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPWP", DbType="VarChar(30)")]
		public string NPWP
		{
			get
			{
				return this._NPWP;
			}
			set
			{
				if ((this._NPWP != value))
				{
					this.OnNPWPChanging(value);
					this.SendPropertyChanging();
					this._NPWP = value;
					this.SendPropertyChanged("NPWP");
					this.OnNPWPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taxable", DbType="Bit NOT NULL")]
		public bool Taxable
		{
			get
			{
				return this._Taxable;
			}
			set
			{
				if ((this._Taxable != value))
				{
					this.OnTaxableChanging(value);
					this.SendPropertyChanging();
					this._Taxable = value;
					this.SendPropertyChanged("Taxable");
					this.OnTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20)")]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20)")]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ItemPriceList", Storage="_ItemPriceLists", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<ItemPriceList> ItemPriceLists
		{
			get
			{
				return this._ItemPriceLists;
			}
			set
			{
				this._ItemPriceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchaseOrderHeader", Storage="_PurchaseOrderHeaders", ThisKey="ID", OtherKey="SupplierID")]
		public EntitySet<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this._PurchaseOrderHeaders;
			}
			set
			{
				this._PurchaseOrderHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemPriceLists(ItemPriceList entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ItemPriceLists(ItemPriceList entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoNumber")]
	public partial class AutoNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _Type;
		
		private int _LastNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnLastNumberChanging(int value);
    partial void OnLastNumberChanged();
    #endregion
		
		public AutoNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNumber", DbType="Int NOT NULL")]
		public int LastNumber
		{
			get
			{
				return this._LastNumber;
			}
			set
			{
				if ((this._LastNumber != value))
				{
					this.OnLastNumberChanging(value);
					this.SendPropertyChanging();
					this._LastNumber = value;
					this.SendPropertyChanged("LastNumber");
					this.OnLastNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Type;
		
		private string _UnitName1;
		
		private string _UnitName2;
		
		private string _UnitName3;
		
		private decimal _UnitRatio2;
		
		private decimal _UnitRatio3;
		
		private bool _IsTaxed;
		
		private System.Nullable<int> _SupplierID;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<ItemPriceList> _ItemPriceLists;
		
		private EntitySet<PurchaseOrderDetail> _PurchaseOrderDetails;
		
		private EntitySet<ReceivingDetail> _ReceivingDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnUnitName1Changing(string value);
    partial void OnUnitName1Changed();
    partial void OnUnitName2Changing(string value);
    partial void OnUnitName2Changed();
    partial void OnUnitName3Changing(string value);
    partial void OnUnitName3Changed();
    partial void OnUnitRatio2Changing(decimal value);
    partial void OnUnitRatio2Changed();
    partial void OnUnitRatio3Changing(decimal value);
    partial void OnUnitRatio3Changed();
    partial void OnIsTaxedChanging(bool value);
    partial void OnIsTaxedChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public Item()
		{
			this._ItemPriceLists = new EntitySet<ItemPriceList>(new Action<ItemPriceList>(this.attach_ItemPriceLists), new Action<ItemPriceList>(this.detach_ItemPriceLists));
			this._PurchaseOrderDetails = new EntitySet<PurchaseOrderDetail>(new Action<PurchaseOrderDetail>(this.attach_PurchaseOrderDetails), new Action<PurchaseOrderDetail>(this.detach_PurchaseOrderDetails));
			this._ReceivingDetails = new EntitySet<ReceivingDetail>(new Action<ReceivingDetail>(this.attach_ReceivingDetails), new Action<ReceivingDetail>(this.detach_ReceivingDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName1", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UnitName1
		{
			get
			{
				return this._UnitName1;
			}
			set
			{
				if ((this._UnitName1 != value))
				{
					this.OnUnitName1Changing(value);
					this.SendPropertyChanging();
					this._UnitName1 = value;
					this.SendPropertyChanged("UnitName1");
					this.OnUnitName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName2", DbType="VarChar(10)")]
		public string UnitName2
		{
			get
			{
				return this._UnitName2;
			}
			set
			{
				if ((this._UnitName2 != value))
				{
					this.OnUnitName2Changing(value);
					this.SendPropertyChanging();
					this._UnitName2 = value;
					this.SendPropertyChanged("UnitName2");
					this.OnUnitName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName3", DbType="VarChar(10)")]
		public string UnitName3
		{
			get
			{
				return this._UnitName3;
			}
			set
			{
				if ((this._UnitName3 != value))
				{
					this.OnUnitName3Changing(value);
					this.SendPropertyChanging();
					this._UnitName3 = value;
					this.SendPropertyChanged("UnitName3");
					this.OnUnitName3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitRatio2", DbType="Decimal(5,2) NOT NULL")]
		public decimal UnitRatio2
		{
			get
			{
				return this._UnitRatio2;
			}
			set
			{
				if ((this._UnitRatio2 != value))
				{
					this.OnUnitRatio2Changing(value);
					this.SendPropertyChanging();
					this._UnitRatio2 = value;
					this.SendPropertyChanged("UnitRatio2");
					this.OnUnitRatio2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitRatio3", DbType="Decimal(5,2) NOT NULL")]
		public decimal UnitRatio3
		{
			get
			{
				return this._UnitRatio3;
			}
			set
			{
				if ((this._UnitRatio3 != value))
				{
					this.OnUnitRatio3Changing(value);
					this.SendPropertyChanging();
					this._UnitRatio3 = value;
					this.SendPropertyChanged("UnitRatio3");
					this.OnUnitRatio3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxed", DbType="Bit NOT NULL")]
		public bool IsTaxed
		{
			get
			{
				return this._IsTaxed;
			}
			set
			{
				if ((this._IsTaxed != value))
				{
					this.OnIsTaxedChanging(value);
					this.SendPropertyChanging();
					this._IsTaxed = value;
					this.SendPropertyChanged("IsTaxed");
					this.OnIsTaxedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemPriceList", Storage="_ItemPriceLists", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ItemPriceList> ItemPriceLists
		{
			get
			{
				return this._ItemPriceLists;
			}
			set
			{
				this._ItemPriceLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_PurchaseOrderDetail", Storage="_PurchaseOrderDetails", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this._PurchaseOrderDetails;
			}
			set
			{
				this._PurchaseOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ReceivingDetail", Storage="_ReceivingDetails", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ReceivingDetail> ReceivingDetails
		{
			get
			{
				return this._ReceivingDetails;
			}
			set
			{
				this._ReceivingDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemPriceLists(ItemPriceList entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemPriceLists(ItemPriceList entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_ReceivingDetails(ReceivingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ReceivingDetails(ReceivingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
}
#pragma warning restore 1591
